# Workflow name
name: Build Health Connect Sample

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set Up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Make gradlew executable
        run: chmod +x ./gradlew
        working-directory: health-connect/HealthConnectSample

      # Run build and capture all output
      - name: Build HealthConnectSample app
        working-directory: health-connect/HealthConnectSample
        run: |
          ./gradlew app:assembleDebug > build.log 2>&1
        continue-on-error: true

      # Analyze failures, call API, show inline annotations
      - name: Annotate API solutions on failure
        if: failure()
        working-directory: health-connect/HealthConnectSample
        run: |
          # Get last 100 lines of log
          tail -n 100 build.log > last_100.log
          
          # Convert log to JSON-friendly string
          ERROR_LOG=$(awk '{printf "%s\\n", $0}' last_100.log)

          # Call your API using GitHub secrets for authentication
          RESPONSE=$(curl -s -u "${{ secrets.ASDF_CLIENT_ID }}:${{ secrets.ASDF_CLIENT_SECRET }}" \
            -X POST https://trace-api.azurewebsites.net/api/projects/${{ secrets.PROJECT_ID }}/solve \
            -H "Content-Type: application/json" \
            -d "{\"job\":\"build\", \"branch\":\"$GITHUB_REF\", \"commit\":\"$GITHUB_SHA\", \"log\":\"$ERROR_LOG\"}")

          # Show API response in a collapsible group
          echo "::group::Failure Analysis Result"
          echo "$RESPONSE"
          echo "::endgroup::"

          # Parse API solutions and annotate inline
          SOLUTIONS=$(echo "$RESPONSE" | jq -r '.solutions[]')
          for line in $SOLUTIONS; do
            echo "::error file=build.log,line=1,col=1::$line"
          done
